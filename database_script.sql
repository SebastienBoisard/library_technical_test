-- MySQL Script generated by MySQL Workbench
-- ven. 16 déc. 2016 17:10:05 CET
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema library
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema library
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `library` DEFAULT CHARACTER SET utf8 ;
USE `library` ;

-- -----------------------------------------------------
-- Table `library`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `index2` (`email` ASC),
  UNIQUE INDEX `index3` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `library`.`author`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library`.`author` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `index2` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `library`.`books`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library`.`books` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `author` INT NOT NULL,
  PRIMARY KEY (`id`, `author`),
  INDEX `fk_books_table3_idx` (`author` ASC),
  CONSTRAINT `fk_books_table3`
    FOREIGN KEY (`author`)
    REFERENCES `library`.`author` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `library`.`users_has_books`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library`.`users_has_books` (
  `users_id` INT NOT NULL,
  `books_id` INT NOT NULL,
  `borrowed` DATE NOT NULL,
  `return` DATE NULL,
  INDEX `fk_users_has_books_books1_idx` (`books_id` ASC),
  INDEX `fk_users_has_books_users1_idx` (`users_id` ASC),
  PRIMARY KEY (`users_id`, `books_id`),
  INDEX `index4` (`return` ASC),
  CONSTRAINT `fk_users_has_books_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `library`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_books_books1`
    FOREIGN KEY (`books_id`)
    REFERENCES `library`.`books` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `library`.`users`
-- -----------------------------------------------------
START TRANSACTION;
USE `library`;
INSERT INTO `library`.`users` (`id`, `name`, `email`) VALUES (1, 'Alice', 'alice@example.tld');
INSERT INTO `library`.`users` (`id`, `name`, `email`) VALUES (2, 'Bob', 'bob@example.tld');

COMMIT;


-- -----------------------------------------------------
-- Data for table `library`.`author`
-- -----------------------------------------------------
START TRANSACTION;
USE `library`;
INSERT INTO `library`.`author` (`id`, `name`) VALUES (1, 'Isaac Asimov');
INSERT INTO `library`.`author` (`id`, `name`) VALUES (2, 'Terry Pratchett');
INSERT INTO `library`.`author` (`id`, `name`) VALUES (3, 'George Orwell');

COMMIT;


-- -----------------------------------------------------
-- Data for table `library`.`books`
-- -----------------------------------------------------
START TRANSACTION;
USE `library`;
INSERT INTO `library`.`books` (`id`, `name`, `author`) VALUES (1, 'The Colour of Magic', 2);
INSERT INTO `library`.`books` (`id`, `name`, `author`) VALUES (2, 'Going Postal', 2);
INSERT INTO `library`.`books` (`id`, `name`, `author`) VALUES (3, 'Thief of Time', 2);
INSERT INTO `library`.`books` (`id`, `name`, `author`) VALUES (4, 'Foundation', 1);
INSERT INTO `library`.`books` (`id`, `name`, `author`) VALUES (5, 'The Caves of Steel', 1);
INSERT INTO `library`.`books` (`id`, `name`, `author`) VALUES (6, '1984', 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `library`.`users_has_books`
-- -----------------------------------------------------
START TRANSACTION;
USE `library`;
INSERT INTO `library`.`users_has_books` (`users_id`, `books_id`, `borrowed`, `return`) VALUES (1, 1, '2016-01-31', '2016-02-02');
INSERT INTO `library`.`users_has_books` (`users_id`, `books_id`, `borrowed`, `return`) VALUES (1, 3, '2016-03-10', NULL);
INSERT INTO `library`.`users_has_books` (`users_id`, `books_id`, `borrowed`, `return`) VALUES (2, 1, '2016-04-10', NULL);
INSERT INTO `library`.`users_has_books` (`users_id`, `books_id`, `borrowed`, `return`) VALUES (1, 2, '2016-03-10', NULL);
INSERT INTO `library`.`users_has_books` (`users_id`, `books_id`, `borrowed`, `return`) VALUES (2, 4, '2016-04-10', NULL);

COMMIT;

